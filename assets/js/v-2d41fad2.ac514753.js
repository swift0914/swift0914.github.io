"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[371],{8753:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-2d41fad2",path:"/skill/reg/",title:"常用正则",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"1、手机号码的校验",slug:"_1、手机号码的校验",children:[]},{level:2,title:"2、身份证的校验",slug:"_2、身份证的校验",children:[]},{level:2,title:"3、邮箱的校验",slug:"_3、邮箱的校验",children:[]},{level:2,title:"4、URL的校验",slug:"_4、url的校验",children:[]},{level:2,title:"5、IPv4的校验",slug:"_5、ipv4的校验",children:[]},{level:2,title:"6、16进制颜色的校验",slug:"_6、16进制颜色的校验",children:[]},{level:2,title:"7、日期 YYYY-MM-DD",slug:"_7、日期-yyyy-mm-dd",children:[]},{level:2,title:"8、日期 YYYY-MM-DD hh:mm:ss",slug:"_8、日期-yyyy-mm-dd-hh-mm-ss",children:[]},{level:2,title:"9、整数的校验",slug:"_9、整数的校验",children:[]},{level:2,title:"10、小数的校验",slug:"_10、小数的校验",children:[]},{level:2,title:"11、保留n位小数",slug:"_11、保留n位小数",children:[]},{level:2,title:"12、邮政编号的校验",slug:"_12、邮政编号的校验",children:[]},{level:2,title:"13、QQ号的校验",slug:"_13、qq号的校验",children:[]},{level:2,title:"14、微信号的校验",slug:"_14、微信号的校验",children:[]},{level:2,title:"15、车牌号的校验",slug:"_15、车牌号的校验",children:[]},{level:2,title:"16、只含字母的字符串",slug:"_16、只含字母的字符串",children:[]},{level:2,title:"17、包含中文的字符串",slug:"_17、包含中文的字符串",children:[]},{level:2,title:"18、密码强度的校验",slug:"_18、密码强度的校验",children:[]},{level:2,title:"19、字符串长度n的校验",slug:"_19、字符串长度n的校验",children:[]},{level:2,title:"20、文件拓展名的校验",slug:"_20、文件拓展名的校验",children:[]},{level:2,title:"21、匹配img和src",slug:"_21、匹配img和src",children:[]},{level:2,title:"22、匹配html中的注释",slug:"_22、匹配html中的注释",children:[]},{level:2,title:"23、匹配html中的style",slug:"_23、匹配html中的style",children:[]},{level:2,title:"24、匹配html中的颜色",slug:"_24、匹配html中的颜色",children:[]},{level:2,title:"25、匹配htmlTag（html标签）",slug:"_25、匹配htmltag-html标签",children:[]}],filePathRelative:"skill/reg/README.md",git:{updatedTime:1633944103e3,contributors:[{name:"sun.wenhao",email:"sun.wenhao@mwee.cn",commits:1}]}}},5316:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const e=(0,a(6252).uE)('<h1 id="常用正则" tabindex="-1"><a class="header-anchor" href="#常用正则" aria-hidden="true">#</a> 常用正则</h1><h2 id="_1、手机号码的校验" tabindex="-1"><a class="header-anchor" href="#_1、手机号码的校验" aria-hidden="true">#</a> 1、手机号码的校验</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> phoneReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[1][3,4,5,6,7,8,9][0-9]{9}$</span><span class="token regex-delimiter">/</span></span>\n\n<span class="token keyword">const</span> phoneStr1 <span class="token operator">=</span> <span class="token string">&#39;18886233487&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>phoneReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>phoneStr1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n\n<span class="token keyword">const</span> phoneStr2 <span class="token operator">=</span> <span class="token string">&#39;17283017203897&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>phoneReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>phoneStr2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_2、身份证的校验" tabindex="-1"><a class="header-anchor" href="#_2、身份证的校验" aria-hidden="true">#</a> 2、身份证的校验</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> sfzReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$</span><span class="token regex-delimiter">/</span></span>\n\n<span class="token keyword">const</span> sfzStr1 <span class="token operator">=</span> <span class="token string">&#39;415106199801012130&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sfzReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>sfzStr1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n\n<span class="token keyword">const</span> sfzStr2 <span class="token operator">=</span> <span class="token string">&#39;718381298381212183&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sfzReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>sfzStr2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_3、邮箱的校验" tabindex="-1"><a class="header-anchor" href="#_3、邮箱的校验" aria-hidden="true">#</a> 3、邮箱的校验</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> emailReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$</span><span class="token regex-delimiter">/</span></span>\n\n<span class="token keyword">const</span> emailStrWY <span class="token operator">=</span> <span class="token string">&#39;956666@163.com&#39;</span> <span class="token comment">// 163邮箱</span>\n<span class="token keyword">const</span> emailStrQQ <span class="token operator">=</span> <span class="token string">&#39;956666@qq.com&#39;</span> <span class="token comment">// qq邮箱</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>emailReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>emailStrWY<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>emailReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>emailStrQQ<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n\n<span class="token keyword">const</span> noEmail <span class="token operator">=</span> <span class="token string">&#39;72873213.com&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>emailReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>noEmail<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="_4、url的校验" tabindex="-1"><a class="header-anchor" href="#_4、url的校验" aria-hidden="true">#</a> 4、URL的校验</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> urlReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^((https?|ftp|file):\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$</span><span class="token regex-delimiter">/</span></span>\n\n<span class="token keyword">const</span> urlStr1 <span class="token operator">=</span> <span class="token string">&#39;https://haha.sunshine.com/xxx/xxx&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>urlReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>urlStr1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n\n<span class="token keyword">const</span> urlStr2 <span class="token operator">=</span> <span class="token string">&#39;sss://haha.sunshine.com/xxx/xxx&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>urlReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>urlStr2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_5、ipv4的校验" tabindex="-1"><a class="header-anchor" href="#_5、ipv4的校验" aria-hidden="true">#</a> 5、IPv4的校验</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> ipv4Reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$</span><span class="token regex-delimiter">/</span></span>\n\n<span class="token keyword">const</span> ipv4Str1 <span class="token operator">=</span> <span class="token string">&#39;122.12.56.65&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ipv4Reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>ipv4Str1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n\n<span class="token keyword">const</span> ipv4Str2 <span class="token operator">=</span> <span class="token string">&#39;122.12.56.655&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ipv4Reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>ipv4Str2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_6、16进制颜色的校验" tabindex="-1"><a class="header-anchor" href="#_6、16进制颜色的校验" aria-hidden="true">#</a> 6、16进制颜色的校验</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> color16Reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$</span><span class="token regex-delimiter">/</span></span>\n\n<span class="token keyword">const</span> color16Str1 <span class="token operator">=</span> <span class="token string">&#39;#fff&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>color16Reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>color16Str1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n\n<span class="token keyword">const</span> color16Str2 <span class="token operator">=</span> <span class="token string">&#39;#1234567&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>color16Reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>color16Str2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_7、日期-yyyy-mm-dd" tabindex="-1"><a class="header-anchor" href="#_7、日期-yyyy-mm-dd" aria-hidden="true">#</a> 7、日期 YYYY-MM-DD</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> dateReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d{4}(\\-)\\d{1,2}\\1\\d{1,2}$</span><span class="token regex-delimiter">/</span></span>\n\n<span class="token keyword">const</span> dateStr1 <span class="token operator">=</span> <span class="token string">&#39;2021-10-10&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dateReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>dateStr1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n\n<span class="token keyword">const</span> dateStr2 <span class="token operator">=</span> <span class="token string">&#39;2021-01-01 1&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dateReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>dateStr2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_8、日期-yyyy-mm-dd-hh-mm-ss" tabindex="-1"><a class="header-anchor" href="#_8、日期-yyyy-mm-dd-hh-mm-ss" aria-hidden="true">#</a> 8、日期 YYYY-MM-DD hh:mm:ss</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> dateReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(\\d{1,4})(-|\\/)(\\d{1,2})\\2(\\d{1,2}) (\\d{1,2}):(\\d{1,2}):(\\d{1,2})$</span><span class="token regex-delimiter">/</span></span>\n\n<span class="token keyword">const</span> dateStr1 <span class="token operator">=</span> <span class="token string">&#39;2021-10-10 16:16:16&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dateReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>dateStr1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n\n<span class="token keyword">const</span> dateStr2 <span class="token operator">=</span> <span class="token string">&#39;2021-10-10 16:&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dateReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>dateStr2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_9、整数的校验" tabindex="-1"><a class="header-anchor" href="#_9、整数的校验" aria-hidden="true">#</a> 9、整数的校验</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> intReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[-+]?\\d*$</span><span class="token regex-delimiter">/</span></span>\n\n<span class="token keyword">const</span> intNum1 <span class="token operator">=</span> <span class="token number">12345</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>intReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>intNum1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n\n<span class="token keyword">const</span> intNum2 <span class="token operator">=</span> <span class="token number">12345.1</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>intReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>intNum2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_10、小数的校验" tabindex="-1"><a class="header-anchor" href="#_10、小数的校验" aria-hidden="true">#</a> 10、小数的校验</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> floatReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[-\\+]?\\d+(\\.\\d+)?$</span><span class="token regex-delimiter">/</span></span>\n\n<span class="token keyword">const</span> floatNum <span class="token operator">=</span> <span class="token number">1234.5</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>floatReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>floatNum<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="_11、保留n位小数" tabindex="-1"><a class="header-anchor" href="#_11、保留n位小数" aria-hidden="true">#</a> 11、保留n位小数</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">checkFloat</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">^([1-9]+[\\d]*(.[0-9]{1,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>n<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">})?)$</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 保留2位小数</span>\n<span class="token keyword">const</span> floatReg <span class="token operator">=</span> <span class="token function">checkFloat</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> floatNum1 <span class="token operator">=</span> <span class="token number">1234.5</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>floatReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>floatNum1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n\n<span class="token keyword">const</span> floatNum2 <span class="token operator">=</span> <span class="token number">1234.55</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>floatReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>floatNum2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n\n<span class="token keyword">const</span> floatNum3 <span class="token operator">=</span> <span class="token number">1234.555</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>floatReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>floatNum3<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="_12、邮政编号的校验" tabindex="-1"><a class="header-anchor" href="#_12、邮政编号的校验" aria-hidden="true">#</a> 12、邮政编号的校验</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> postalNoReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d{6}$</span><span class="token regex-delimiter">/</span></span>\n\n<span class="token keyword">const</span> postalNoStr1 <span class="token operator">=</span> <span class="token string">&#39;522000&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>postalNoReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>postalNoStr1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n\n<span class="token keyword">const</span> postalNoStr2 <span class="token operator">=</span> <span class="token string">&#39;5220000&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>postalNoReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>postalNoStr2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_13、qq号的校验" tabindex="-1"><a class="header-anchor" href="#_13、qq号的校验" aria-hidden="true">#</a> 13、QQ号的校验</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 5-11位数字</span>\n<span class="token keyword">const</span> qqReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[1-9][0-9]{4,10}$</span><span class="token regex-delimiter">/</span></span>\n\n<span class="token keyword">const</span> qqStr1 <span class="token operator">=</span> <span class="token string">&#39;1915801633&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>qqReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>qqStr1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n\n<span class="token keyword">const</span> qqStr2 <span class="token operator">=</span> <span class="token string">&#39;191580163333&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>qqReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>qqStr2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="_14、微信号的校验" tabindex="-1"><a class="header-anchor" href="#_14、微信号的校验" aria-hidden="true">#</a> 14、微信号的校验</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 6至20位，以字母开头，字母，数字，减号，下划线</span>\n<span class="token keyword">const</span> wxReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]([-_a-zA-Z0-9]{5,19})+$</span><span class="token regex-delimiter">/</span></span>\n\n<span class="token keyword">const</span> wxStr1 <span class="token operator">=</span> <span class="token string">&#39;linsanxin885577&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>wxReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>wxStr1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n\n<span class="token keyword">const</span> wxStr2 <span class="token operator">=</span> <span class="token string">&#39;厉害了我的vx&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>wxReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>wxStr2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="_15、车牌号的校验" tabindex="-1"><a class="header-anchor" href="#_15、车牌号的校验" aria-hidden="true">#</a> 15、车牌号的校验</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> carNoReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-Z0-9]{4}[A-Z0-9挂学警港澳]{1}$</span><span class="token regex-delimiter">/</span></span>\n\n<span class="token keyword">const</span> carNoStr1 <span class="token operator">=</span> <span class="token string">&#39;粤A12345&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>carNoReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>carNoStr1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n\n<span class="token keyword">const</span> carNoStr2 <span class="token operator">=</span> <span class="token string">&#39;广东A12345&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>carNoReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>carNoStr2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_16、只含字母的字符串" tabindex="-1"><a class="header-anchor" href="#_16、只含字母的字符串" aria-hidden="true">#</a> 16、只含字母的字符串</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> letterReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]+$</span><span class="token regex-delimiter">/</span></span>\n\n<span class="token keyword">const</span> letterStr1 <span class="token operator">=</span> <span class="token string">&#39;sunshineLin&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>letterReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>letterStr1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n\n<span class="token keyword">const</span> letterStr2 <span class="token operator">=</span> <span class="token string">&#39;sunshine_Lin&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>letterReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>letterStr2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_17、包含中文的字符串" tabindex="-1"><a class="header-anchor" href="#_17、包含中文的字符串" aria-hidden="true">#</a> 17、包含中文的字符串</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> cnReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\u4E00-\\u9FA5]</span><span class="token regex-delimiter">/</span></span>\n\n<span class="token keyword">const</span> cnStr1 <span class="token operator">=</span> <span class="token string">&#39;我是sunshine_Lin，林三心&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cnReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>cnStr1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n\n<span class="token keyword">const</span> cnStr2 <span class="token operator">=</span> <span class="token string">&#39;sunshine_Lin&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cnReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>cnStr2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_18、密码强度的校验" tabindex="-1"><a class="header-anchor" href="#_18、密码强度的校验" aria-hidden="true">#</a> 18、密码强度的校验</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 说明：密码中必须包含字母、数字、特称字符，至少8个字符，最多30个字符</span>\n<span class="token keyword">const</span> passwordReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[^a-zA-Z0-9]).{8,30}</span><span class="token regex-delimiter">/</span></span>\n\n<span class="token keyword">const</span> password1 <span class="token operator">=</span> <span class="token string">&#39;sunshine_Lin12345..&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>passwordReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>password1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n\n<span class="token keyword">const</span> password2 <span class="token operator">=</span> <span class="token string">&#39;sunshineLin12345&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>passwordReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>password2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="_19、字符串长度n的校验" tabindex="-1"><a class="header-anchor" href="#_19、字符串长度n的校验" aria-hidden="true">#</a> 19、字符串长度n的校验</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">checkStrLength</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">^.{</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>n<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">}$</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 校验长度为3的字符串</span>\n<span class="token keyword">const</span> lengthReg <span class="token operator">=</span> <span class="token function">checkStrLength</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> str1 <span class="token operator">=</span> <span class="token string">&#39;hhh&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lengthReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n\n<span class="token keyword">const</span> str2 <span class="token operator">=</span> <span class="token string">&#39;hhhhh&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lengthReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="_20、文件拓展名的校验" tabindex="-1"><a class="header-anchor" href="#_20、文件拓展名的校验" aria-hidden="true">#</a> 20、文件拓展名的校验</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">checkFileName</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  arr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">name</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;|&#39;</span><span class="token punctuation">)</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>arr<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)$</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> filenameReg <span class="token operator">=</span> <span class="token function">checkFileName</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;jpg&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;png&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;txt&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> filename1 <span class="token operator">=</span> <span class="token string">&#39;sunshine.jpg&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>filenameReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>filename1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n<span class="token keyword">const</span> filename2 <span class="token operator">=</span> <span class="token string">&#39;sunshine.png&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>filenameReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>filename2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n<span class="token keyword">const</span> filename3 <span class="token operator">=</span> <span class="token string">&#39;sunshine.txt&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>filenameReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>filename3<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n<span class="token keyword">const</span> filename4 <span class="token operator">=</span> <span class="token string">&#39;sunshine.md&#39;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>filenameReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>filename4<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="_21、匹配img和src" tabindex="-1"><a class="header-anchor" href="#_21、匹配img和src" aria-hidden="true">#</a> 21、匹配img和src</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> imgReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;img.*?src=[\\&quot;|\\&#39;]?(.*?)[\\&quot;|\\&#39;]?\\s.*?&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">ig</span></span>\n\n<span class="token keyword">const</span> htmlStr <span class="token operator">=</span> <span class="token string">&#39;&lt;div&gt;&lt;/div&gt;&lt;img src=&quot;sunshine.png&quot; /&gt;&lt;img src=&quot;sunshine111.png&quot; /&gt;&#39;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>imgReg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>htmlStr<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">// [</span>\n<span class="token comment">//   &#39;&lt;img src=&quot;sunshine.png&quot; /&gt;&#39;,</span>\n<span class="token comment">//   &#39;sunshine.png&#39;,</span>\n<span class="token comment">//   index: 11,</span>\n<span class="token comment">//   input: &#39;&lt;div&gt;&lt;/div&gt;&lt;img src=&quot;sunshine.png&quot; /&gt;&lt;img src=&quot;sunshine111.png&quot; /&gt;&#39;,</span>\n<span class="token comment">//   groups: undefined</span>\n<span class="token comment">// ]</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>imgReg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>htmlStr<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">// [</span>\n<span class="token comment">//   &#39;&lt;img src=&quot;sunshine111.png&quot; /&gt;&#39;,</span>\n<span class="token comment">//   &#39;sunshine111.png&#39;,</span>\n<span class="token comment">//   index: 37,</span>\n<span class="token comment">//   input: &#39;&lt;div&gt;&lt;/div&gt;&lt;img src=&quot;sunshine.png&quot; /&gt;&lt;img src=&quot;sunshine111.png&quot; /&gt;&#39;,</span>\n<span class="token comment">//   groups: undefined</span>\n<span class="token comment">// ] </span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="_22、匹配html中的注释" tabindex="-1"><a class="header-anchor" href="#_22、匹配html中的注释" aria-hidden="true">#</a> 22、匹配html中的注释</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> noteReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;!--(.*?)--&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>\n\n<span class="token keyword">const</span> htmlStr <span class="token operator">=</span> <span class="token string">&#39;&lt;!--一个div标签--&gt; &lt;div&gt;&lt;/div&gt; &lt;!--一个div标签--&gt; &lt;div&gt;&lt;/div&gt;&#39;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>noteReg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>htmlStr<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">// [</span>\n<span class="token comment">//   &#39;&lt;!--一个div标签--&gt;&#39;,</span>\n<span class="token comment">//   &#39;一个div标签&#39;,</span>\n<span class="token comment">//   index: 0,</span>\n<span class="token comment">//   input: &#39;&lt;!--一个div标签--&gt; &lt;div&gt;&lt;/div&gt; &lt;!--一个div标签--&gt; &lt;div&gt;&lt;/div&gt;&#39;,</span>\n<span class="token comment">//   groups: undefined</span>\n<span class="token comment">// ]</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>noteReg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>htmlStr<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">// [</span>\n<span class="token comment">//   &#39;&lt;!--一个div标签--&gt;&#39;,</span>\n<span class="token comment">//   &#39;一个div标签&#39;,</span>\n<span class="token comment">//   index: 27,</span>\n<span class="token comment">//   input: &#39;&lt;!--一个div标签--&gt; &lt;div&gt;&lt;/div&gt; &lt;!--一个div标签--&gt; &lt;div&gt;&lt;/div&gt;&#39;,</span>\n<span class="token comment">//   groups: undefined</span>\n<span class="token comment">// ]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="_23、匹配html中的style" tabindex="-1"><a class="header-anchor" href="#_23、匹配html中的style" aria-hidden="true">#</a> 23、匹配html中的style</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> styleReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">style=&quot;[^=&gt;]*&quot;([(\\s+\\w+=)|&gt;])</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>\n\n<span class="token keyword">const</span> htmlStr <span class="token operator">=</span> <span class="token string">&#39;&lt;div style=&quot;background:#000;&quot;&gt;&lt;span style=&quot;color:#fff&quot;&gt;&lt;/span&gt;&lt;/div&gt;&#39;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>styleReg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>htmlStr<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">// [</span>\n<span class="token comment">//   &#39;style=&quot;background:#000;&quot;&gt;&#39;,</span>\n<span class="token comment">//   &#39;&gt;&#39;,</span>\n<span class="token comment">//   index: 5,</span>\n<span class="token comment">//   input: &#39;&lt;div style=&quot;background:#000;&quot;&gt;&lt;span style=&quot;color:#fff&quot;&gt;&lt;/span&gt;&lt;/div&gt;&#39;,</span>\n<span class="token comment">//   groups: undefined</span>\n<span class="token comment">// ]</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>styleReg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>htmlStr<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">// [</span>\n<span class="token comment">//   &#39;style=&quot;color:#fff&quot;&gt;&#39;,</span>\n<span class="token comment">//   &#39;&gt;&#39;,</span>\n<span class="token comment">//   index: 36,</span>\n<span class="token comment">//   input: &#39;&lt;div style=&quot;background:#000;&quot;&gt;&lt;span style=&quot;color:#fff&quot;&gt;&lt;/span&gt;&lt;/div&gt;&#39;,</span>\n<span class="token comment">//   groups: undefined</span>\n<span class="token comment">// ]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="_24、匹配html中的颜色" tabindex="-1"><a class="header-anchor" href="#_24、匹配html中的颜色" aria-hidden="true">#</a> 24、匹配html中的颜色</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> colorReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>\n\n<span class="token keyword">const</span> htmlStr <span class="token operator">=</span> <span class="token string">&#39;&lt;div style=&quot;background:#000;&quot;&gt;&lt;span style=&quot;color:#fff&quot;&gt;&lt;/span&gt;&lt;/div&gt;&#39;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>colorReg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>htmlStr<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">// [</span>\n<span class="token comment">//   &#39;#000&#39;,</span>\n<span class="token comment">//   &#39;000&#39;,</span>\n<span class="token comment">//   index: 23,</span>\n<span class="token comment">//   input: &#39;&lt;div style=&quot;background:#000;&quot;&gt;&lt;span style=&quot;color:#fff&quot;&gt;&lt;/span&gt;&lt;/div&gt;&#39;,</span>\n<span class="token comment">//   groups: undefined</span>\n<span class="token comment">// ]</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>colorReg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>htmlStr<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">// [</span>\n<span class="token comment">//   &#39;#fff&#39;,</span>\n<span class="token comment">//   &#39;fff&#39;,</span>\n<span class="token comment">//   index: 49,</span>\n<span class="token comment">//   input: &#39;&lt;div style=&quot;background:#000;&quot;&gt;&lt;span style=&quot;color:#fff&quot;&gt;&lt;/span&gt;&lt;/div&gt;&#39;,</span>\n<span class="token comment">//   groups: undefined</span>\n<span class="token comment">// ]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="_25、匹配htmltag-html标签" tabindex="-1"><a class="header-anchor" href="#_25、匹配htmltag-html标签" aria-hidden="true">#</a> 25、匹配htmlTag（html标签）</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> endReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;(&quot;[^&quot;]*&quot;|&#39;[^&#39;]*&#39;|[^&#39;&quot;&gt;])*&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>\n\n<span class="token keyword">const</span> htmlStr <span class="token operator">=</span> <span class="token string">&#39;&lt;div style=&quot;background:#000;&quot;&gt;&lt;span style=&quot;color:#fff&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;h1&gt;&lt;/h1&gt;&#39;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>endReg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>htmlStr<span class="token punctuation">)</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>endReg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>htmlStr<span class="token punctuation">)</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>endReg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>htmlStr<span class="token punctuation">)</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>endReg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>htmlStr<span class="token punctuation">)</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>endReg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>htmlStr<span class="token punctuation">)</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>endReg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>htmlStr<span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>',51),p={},t=(0,a(3744).Z)(p,[["render",function(n,s){return e}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}}}]);