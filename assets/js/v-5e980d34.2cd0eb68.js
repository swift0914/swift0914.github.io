"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[288],{1206:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-5e980d34",path:"/tools/git.html",title:"Git 操作",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"配置操作",slug:"配置操作",children:[]},{level:2,title:"本地操作",slug:"本地操作",children:[]},{level:2,title:"分支操作",slug:"分支操作",children:[]},{level:2,title:"变更历史",slug:"变更历史",children:[]},{level:2,title:"远端交互",slug:"远端交互",children:[]},{level:2,title:"Git规范",slug:"git规范",children:[]}],filePathRelative:"tools/git.md",git:{updatedTime:1604564878e3,contributors:[{name:"swift",email:"962498816@qq.com",commits:4}]}}},4530:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const e=(0,a(6252).uE)('<h1 id="git-操作" tabindex="-1"><a class="header-anchor" href="#git-操作" aria-hidden="true">#</a> Git 操作</h1><h2 id="配置操作" tabindex="-1"><a class="header-anchor" href="#配置操作" aria-hidden="true">#</a> 配置操作</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>// 全局配置\n<span class="token function">git</span> config --global user.name <span class="token string">&#39;名字&#39;</span>\n<span class="token function">git</span> config --global user.email <span class="token string">&#39;邮箱&#39;</span>\n\n// 当前仓库配置\n<span class="token function">git</span> config --local user.name <span class="token string">&#39;名字&#39;</span>\n<span class="token function">git</span> config --local user.email <span class="token string">&#39;邮箱&#39;</span>\n\n// 查看全局配置\n<span class="token function">git</span> config --global --list\n\n// 查看当前仓库配置\n<span class="token function">git</span> config --local --list\n\n// 删除全局配置\n<span class="token function">git</span> config --uset --global 要删除的配置项\n\n// 删除本地配置\n<span class="token function">git</span> config --uset --local 要删除的配置项\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="本地操作" tabindex="-1"><a class="header-anchor" href="#本地操作" aria-hidden="true">#</a> 本地操作</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>// 查看变更情况\n<span class="token function">git</span> status\n\n// 将当前目录及子目录变更添加到暂存区\n<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>\n\n// 仓库内所有变动添加到暂存区\n<span class="token function">git</span> <span class="token function">add</span> -A\n\n// 指定文件添加到暂存区\n<span class="token function">git</span> <span class="token function">add</span> 文件A 文件B\n\n// 比较工作区、暂存区的差异\n<span class="token function">git</span> <span class="token function">diff</span>\n\n// 比较暂存区和 HEAD 的所有差异\n<span class="token function">git</span> <span class="token function">diff</span> --cached\n\n// 比较某文件暂存区和 HEAD 的差异\n<span class="token function">git</span> <span class="token function">diff</span> --cached 文件\n\n// 创建 commit\n<span class="token function">git</span> commit\n\n// 将工作区指定文件恢复成和暂存区一致\n<span class="token function">git</span> checkout 文件1 文件2 文件3\n\n// 将暂存区指定文件恢复成和 HEAD 一致\n<span class="token function">git</span> reset 文件1 文件2 文件3\n\n// 将暂存区和工作区所有文件恢复成和 HEAD 一样\n<span class="token function">git</span> reset --hard\n\n// 优雅修改最后一次 commit\n<span class="token function">git</span> add.\n<span class="token function">git</span> commit --amend\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h2 id="分支操作" tabindex="-1"><a class="header-anchor" href="#分支操作" aria-hidden="true">#</a> 分支操作</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>// 查看当前工作分支及本地分支\n<span class="token function">git</span> branch -v\n\n// 查看本地和远端分支\n<span class="token function">git</span> branch -av\n\n// 查看远端分支\n<span class="token function">git</span> branch -rv\n\n// 切换到指定分支\n<span class="token function">git</span> checkout 指定分支\n\n// 基于当前分支创建新分支\n<span class="token function">git</span> branch 新分支名\n\n// 基于指定分支创建新分支\n<span class="token function">git</span> branch 新分支 指定分支\n\n// 基于某个 commit 创建分支\n<span class="token function">git</span> branch 新分支 某个commit的id\n\n// 创建并切换到该分支\n<span class="token function">git</span> checkout -b 新分支\n\n// 安全删除本地某分支\n<span class="token function">git</span> branch -d 要删除的分支\n\n// 强行删除本地某分支\n<span class="token function">git</span> branch -D 要删除的分支\n\n// 删除远端 origin 已不存在的所有本地分支\n<span class="token function">git</span> remote prune orign\n\n// 将 A 分支合入到当前分支中且为 merge 创建 commit\n<span class="token function">git</span> merge A分支\n\n// 将 A 分支合入到 B 分支中且为 merge 创建 commit\n<span class="token function">git</span> merge A分支 B分支\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h2 id="变更历史" tabindex="-1"><a class="header-anchor" href="#变更历史" aria-hidden="true">#</a> 变更历史</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>// 当前分支各个 commit 用一行显示\n<span class="token function">git</span> log --oneline\n\n// 显示就近的 n 个 commit\n<span class="token function">git</span> log -n\n\n// 用图示显示所有分支的历史\n<span class="token function">git</span> log --oneline --graph --all\n\n// 查看涉及到某文件变更的所有 commit\n<span class="token function">git</span> log 文件\n\n// 某文件各行最后修改对应的 commit 以及作者\n<span class="token function">git</span> blame 文件\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="远端交互" tabindex="-1"><a class="header-anchor" href="#远端交互" aria-hidden="true">#</a> 远端交互</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>// 查看所有远端仓库\n<span class="token function">git</span> remote -v\n\n// 添加远端仓库\n<span class="token function">git</span> remote <span class="token function">add</span> url\n\n// 删除远端仓库\n<span class="token function">git</span> remote remove remote的名称\n\n// 重命名远端仓库\n<span class="token function">git</span> remote <span class="token function">rename</span> 旧名称 新名称\n\n// 将远端所有分支和标签的变更都拉到本地\n<span class="token function">git</span> fetch remote\n\n// 把远端分支的变更拉到本地，且 merge 到本地分支\n<span class="token function">git</span> pull origin 分支名\n\n// 将本地分支 push 到远端\n<span class="token function">git</span> push origin 分支名\n\n// 删除远端分支\n<span class="token function">git</span> push remote --delete 远端分支名\n<span class="token function">git</span> push remote :远端分支名\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="git规范" tabindex="-1"><a class="header-anchor" href="#git规范" aria-hidden="true">#</a> Git规范</h2><ul><li><code>feat</code> 增加新功能</li><li><code>fix</code> 修复问题/BUG</li><li><code>style</code> 代码风格相关无影响运行结果的</li><li><code>perf</code> 优化/性能提升</li><li><code>refactor</code> 重构</li><li><code>revert</code> 撤销修改</li><li><code>test</code> 测试相关</li><li><code>docs</code> 文档/注释</li><li><code>chore</code> 依赖更新/脚手架配置修改等</li><li><code>workflow</code> 工作流改进</li><li><code>ci</code> 持续集成</li><li><code>types</code> 类型定义文件更改</li><li><code>wip</code> 开发中</li></ul>',13),l={},p=(0,a(3744).Z)(l,[["render",function(n,s){return e}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}}}]);